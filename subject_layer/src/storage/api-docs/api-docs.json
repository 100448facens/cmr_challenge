{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel OpenApi Subjects Layer Documentation",
        "description": "Subjects Layer developed to Collective Minds Radiology",
        "contact": {
            "email": "100448facens@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080/api",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "/repositories/{repositoryID}/subjects": {
            "get": {
                "tags": [
                    "Subject"
                ],
                "summary": "Get list of subjects",
                "description": "Returns list of subjects",
                "operationId": "getSubjectList",
                "parameters": [
                    {
                        "name": "repositoryID",
                        "in": "path",
                        "description": "Repository id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubjectResource"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Subject"
                ],
                "summary": "Create new subject",
                "description": "Returns subject data",
                "operationId": "storeSubject",
                "parameters": [
                    {
                        "name": "repositoryID",
                        "in": "path",
                        "description": "Repository id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreSubjectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subject"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/repositories/{repositoryID}/projects/{projectID}/subjects/{subjectID}": {
            "post": {
                "tags": [
                    "Subject"
                ],
                "summary": "Assign a Project to Subject",
                "description": "Returns updated subject data",
                "operationId": "assignProjectToSubject",
                "parameters": [
                    {
                        "name": "repositoryID",
                        "in": "path",
                        "description": "Repository id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "Project id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "subjectID",
                        "in": "path",
                        "description": "New Subject id to assigne at Project",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subject"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/repositories/{repositoryID}/projects/{projectID}/subjects": {
            "get": {
                "tags": [
                    "Subject"
                ],
                "summary": "List subject by project at repository",
                "description": "Returns subject data",
                "operationId": "listSubjectByProject",
                "parameters": [
                    {
                        "name": "repositoryID",
                        "in": "path",
                        "description": "Repository id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "Project id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubjectResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Subject": {
                "title": "Subject",
                "description": "Subject model",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "name",
                        "description": "Name of the new subject",
                        "type": "string",
                        "example": "A nice project"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Subject"
                }
            },
            "SubjectResource": {
                "title": "SubjectResource",
                "description": "Subject resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Subject"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "SubjectResource"
                }
            },
            "StoreSubjectRequest": {
                "title": "Store Subject request",
                "description": "Store Subject request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new subject",
                        "type": "string",
                        "example": "A nice project"
                    }
                },
                "type": "object"
            },
            "UpdateSubjectRequest": {
                "title": "Update Subject request",
                "description": "Update Subject request body data",
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Subject's id to update",
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "Name of the new subject",
                        "type": "string",
                        "example": "A nice project"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Subjects",
            "description": "API Endpoints of Subjects Layer"
        }
    ],
    "security": [
        []
    ]
}